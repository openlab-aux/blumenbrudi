esphome:
  name: esp32test
  platform: ESP32
  board: heltec_wifi_lora_32
  includes:
    - chirp.h

sensor:
  - platform: custom
    lambda: |-
      auto my_chirp_0 = new ChirpComponent();
      App.register_component(my_chirp_0 );
      return {my_chirp_0};
    sensors:
      - name: "chirp_humidity_0"
        id: "chirp_humidity_0"
#  - platform: custom
#    lambda: |-
#      auto my_chirp_1 = new ChirpComponent();
#      my_chirp_1->set_addr(0x21);
#      App.register_component(my_chirp_1);
#      return {my_chirp_1};
#    sensors:
#      - name: "chirp_humidity_1"
#        id: "chirp_humidity_1"

wifi:
  ssid: "Labor 2.0"
  password: "nerdhoehle2"
  fast_connect: true
logger:
web_server:
  port: 80
ota:
  password: "olaota!1"
api:
  password: "olagr0wth!1"
# TODO: Display. Perhaps usefull: https://www.hackerspace-ffm.de/wiki/index.php?title=Heltec_Wifi_LoRa_32
i2c:
  sda: GPIO4 # pin 4 sda
  scl: GPIO15 # pin 15 scl
font:
  - file: "luximr.ttf"
    id: my_font
    size: 16
display:
  - platform: ssd1306_i2c
    id: my_display
    model: "SSD1306 128x64"
    reset_pin: GPIO16 # pin 16 rst
    address: 0x3c
    pages:
      - id: chirps
        lambda: |-
          it.printf(0, 8, id(my_font), "Chirp 0: %.0f", id(chirp_humidity_0).state);
#    it.printf(0, 24, id(my_font), "Chirp 1: %.0f", id(chirp_humidity_1).state);
      - id: page1
        lambda: |-
          it.print(0, 0, id(my_font), "Hello World!");
          it.print(0, 16, id(my_font), "Wir haben   ");
          it.print(0, 32, id(my_font), "viel Platz  ");
          it.print(0, 48, id(my_font), "fuer Text. :)");
interval:
  - interval: 5s
    then:
      - display.page.show_next: my_display
      - component.update: my_display
